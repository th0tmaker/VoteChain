{
  "version": 3,
  "sources": [
    "../../vote_chain/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA;;;AAAA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;AAAA;AAAA;AAgDK;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAyBA;;AAAA;AAAA;AAAA;;AAAA;AAzEL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAyEK;;;AAAA;AAAA;AAiBA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AA1FL;;;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AA0FK;;;AAAA;AAAA;AA4BA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAtHL;;;AAAA;AAAA;;AAsHK;;;AAAA;AAAA;AAqCA;;AAAA;AAAA;AAAA;;AAAA;AA3JL;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAAA;;;AAAA;AA2JK;;;AAAA;AAAA;AA+DA;;AAAA;AAAA;AAAA;;AAAA;AA1NL;;;AAAA;AAAA;;AAAA;;;AAAA;AA0NK;;;AAAA;AAAA;AA6CA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAvQL;AAAA;AAgDA;;;AAIY;;AAAc;;AAAd;AADJ;AAKA;AAA+B;AAA/B;AAEA;AAAsB;AAAtB;AAEA;AAAqB;AAArB;AACA;;AAAqB;AAArB;AACA;;AAAqB;AAArB;AACA;;AAAmB;AAAnB;AAG0B;;AAAA;AAA1B;;;;;;AAAA;AAAA;AAAA;AAGI;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAFJ;;AAMR;;;AAGe;;AAAA;;AACO;;;;AADW;;;AAAlB;AAAP;AAII;;AAAA;;AAAkB;;AAAlB;AADJ;AAII;;AAAA;;AAAoB;;AAApB;AADJ;AAK6D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAA7D;;AArDR;;;AAGmB;;;;AAIX;;AAAiB;AAHN;;;;AAIX;;AAAiB;AAGV;;AATI;;;;AASJ;AAAA;;AAAA;AAAA;AAAP;AA6CR;;;AAKe;;AAAA;;AACO;AAAoB;AADT;;;AAAlB;AAAP;AAII;;AAAA;;AAAA;;AAAA;AADJ;AAII;;AAAA;;AAAoB;;AAApB;AADJ;AAKA;;AAAA;;AAAkC;AAAlC;AAGA;;AAAA;AAAkC;AAAlC;AAGA;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAA;AAAA;AAAA;AAG4D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAA5D;;AAGR;;;AAGe;;AACS;;AADT;AAAP;AAKI;;AAAgC;;AAAhC;AAAA;;;AACI;;AAAA;AAAA;AAAA;AAAA;AADJ;;;AAGA;;AAAgC;;AAAhC;AAAA;;;AACI;;AAAA;AAAA;AAAA;AAAA;AADJ;;;AAEI;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AAFJ;;;;;;;;AAJJ;AAUA;;AAAI;;AAAJ;AACA;;AAAI;AAAJ;AAGA;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAA;AAAA;AAAA;AAIA;AAEmC;AAAoB;AAA5C;;;AAHG;AAGH;AACA;;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;;AADc;;;AACd;AASyD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAzD;;AAGR;;;AAcY;;AAAc;;AAAd;AADJ;AAIQ;;AAAA;AAAgB;;AAAhB;AAAR;AAGI;;AAAA;AAAkB;;AAAlB;AAAA;;;AACA;;AAAA;AAAkB;;AAAlB;AADA;;;AAEA;;AAAA;AAAkB;;AAAlB;AAFA;;;;;;;;AADJ;AAgBI;;AAAA;;AAAA;AADJ;AAIwB;;AAAkB;;;;AAAlB;AAAjB;;AAAA;AAAP;AAIO;;AAAA;;AAAA;AAAmC;;;;AAAnC;AAAP;AAIO;AAAA;AAAA;AAAA;AAAA;AAAP;AAGA;;;;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;;;;;;AAAA;;AAAA;AACA;;;;;;;;;;;;;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AACA;;AAAA;;AAAA;AAEA;AAAsB;AAAtB;AAGyB;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAzB;AACuB;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAvB;;AAGR;;;AAGe;;AACS;;AADT;AAAP;AAKI;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AADJ;AAKI;;AAA0B;AAAA;;AAAA;AAAA;AAA1B;AADJ;AAIO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAP;AAKI;;AAAU;AAAV;AAAA;AAAA;;;AAAuB;;AAAU;AAAV;AAAvB;;;AAA8C;;AAAU;;AAAV;AAA9C;;;;;;;;AADJ;AAKA;;AAAA;;AAAkC;AAAlC;AAGA;AAAA;;AAAA;AAAA;AAAoB;AAApB;AAAA;;AAAA;AAAA;AAGR;;AAAA;;;AACY;AAAA;AAAA;AAAA;AAAsB;AAAtB;AAAA;AAAA;AAAA;AACA;;AAAA;AAAkC;AAAlC;;;;AACC;;AAAU;AAAV;AAAb;;;AACY;AAAA;;AAAA;AAAA;AAAsB;AAAtB;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAkC;AAAlC;;;;AAEA;AAAA;;AAAA;AAAA;AAAsB;AAAtB;AAAA;;AAAA;AAAA;AACA;;AAAA;AAAkC;;AAAlC;AAGqD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAAA;AAAzD;AAC0C;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAA1C;;AAGR;;;AAIY;;AAAc;;AAAd;AADJ;AAMA;AACa;;AACsB;AAAoB;;AAA5C;;;AAHG;AAGH;AACA;;AAEF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALT;;;AADc;;;AACd;AAWI;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAFJ;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.approval_program",
      "params": {},
      "block": "smart_contracts.vote_chain.contract.VoteChain.approval_program",
      "stack_in": [],
      "op": "intcblock 0 1 2 1000"
    },
    "8": {
      "op": "bytecblock \"vote_choice\" \"total_accounts_opted_in\" \"poll_finalized\" \"choice1_total\" \"choice2_total\" \"choice3_total\" \"total_votes\" \"vote_status\" \"poll_end_date_unix\" \"poll_start_date_unix\""
    },
    "167": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.__puya_arc4_router__",
      "op": "callsub __puya_arc4_router__",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "170": {
      "op": "return",
      "stack_out": []
    },
    "171": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.__puya_arc4_router__",
      "params": {},
      "block": "__puya_arc4_router__",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "174": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "176": {
      "op": "bz __puya_arc4_router___after_if_else@12",
      "stack_out": []
    },
    "179": {
      "op": "pushbytess 0x5be219f0 0xf9744724 0x6f8aa888 0xb3fb275b 0x189dc68e 0x4abfcdf3 0x5ff16da4 // method \"generate()void\", method \"global_storage_mbr(pay)void\", method \"local_storage_mbr(account,pay)void\", method \"opt_out(account)void\", method \"setup_poll(byte[],byte[],byte[],byte[],string,uint64,string,uint64)void\", method \"submit_vote(account,uint64)void\", method \"terminate()void\""
    },
    "216": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(generate()void)",
        "Method(global_storage_mbr(pay)void)",
        "Method(local_storage_mbr(account,pay)void)",
        "Method(opt_out(account)void)",
        "Method(setup_poll(byte[],byte[],byte[],byte[],string,uint64,string,uint64)void)",
        "Method(submit_vote(account,uint64)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(generate()void)",
        "Method(global_storage_mbr(pay)void)",
        "Method(local_storage_mbr(account,pay)void)",
        "Method(opt_out(account)void)",
        "Method(setup_poll(byte[],byte[],byte[],byte[],string,uint64,string,uint64)void)",
        "Method(submit_vote(account,uint64)void)",
        "Method(terminate()void)",
        "tmp%2#0"
      ]
    },
    "219": {
      "op": "match __puya_arc4_router___generate_route@2 __puya_arc4_router___global_storage_mbr_route@3 __puya_arc4_router___local_storage_mbr_route@4 __puya_arc4_router___opt_out_route@5 __puya_arc4_router___setup_poll_route@6 __puya_arc4_router___submit_vote_route@7 __puya_arc4_router___terminate_route@8",
      "stack_out": []
    },
    "235": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "236": {
      "retsub": true,
      "op": "retsub"
    },
    "237": {
      "block": "__puya_arc4_router___generate_route@2",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "239": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "240": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "241": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "243": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "244": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "245": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.generate",
      "op": "callsub generate"
    },
    "248": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "249": {
      "retsub": true,
      "op": "retsub"
    },
    "250": {
      "block": "__puya_arc4_router___global_storage_mbr_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "252": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "253": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "254": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "256": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "257": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "259": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0",
        "1"
      ]
    },
    "260": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "261": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "262": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "264": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "265": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "266": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "267": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.global_storage_mbr",
      "op": "callsub global_storage_mbr",
      "stack_out": []
    },
    "270": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "271": {
      "retsub": true,
      "op": "retsub"
    },
    "272": {
      "block": "__puya_arc4_router___local_storage_mbr_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "274": {
      "op": "intc_1 // OptIn",
      "defined_out": [
        "OptIn",
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0",
        "OptIn"
      ]
    },
    "275": {
      "op": "==",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "276": {
      "error": "OnCompletion is not OptIn",
      "op": "assert // OnCompletion is not OptIn",
      "stack_out": []
    },
    "277": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "279": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "280": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "283": {
      "op": "btoi",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "284": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "286": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0"
      ]
    },
    "288": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%18#0",
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "tmp%19#0",
        "1"
      ]
    },
    "289": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "gtxn_idx%1#0"
      ]
    },
    "290": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "291": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "293": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "pay"
      ]
    },
    "294": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "295": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "tmp%18#0",
        "gtxn_idx%1#0"
      ]
    },
    "296": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.local_storage_mbr",
      "op": "callsub local_storage_mbr",
      "stack_out": []
    },
    "299": {
      "op": "intc_1 // 1",
      "stack_out": [
        "1"
      ]
    },
    "300": {
      "retsub": true,
      "op": "retsub"
    },
    "301": {
      "block": "__puya_arc4_router___opt_out_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "303": {
      "op": "intc_2 // CloseOut",
      "defined_out": [
        "CloseOut",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "CloseOut"
      ]
    },
    "304": {
      "op": "==",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "305": {
      "error": "OnCompletion is not CloseOut",
      "op": "assert // OnCompletion is not CloseOut",
      "stack_out": []
    },
    "306": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "308": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "309": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "312": {
      "op": "btoi",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "313": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "315": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.opt_out",
      "op": "callsub opt_out",
      "stack_out": []
    },
    "318": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "319": {
      "retsub": true,
      "op": "retsub"
    },
    "320": {
      "block": "__puya_arc4_router___setup_poll_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "322": {
      "op": "!",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "323": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "324": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "326": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "327": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "330": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "333": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%32#0",
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%33#0"
      ]
    },
    "336": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0"
      ]
    },
    "339": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%35#0"
      ]
    },
    "342": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0"
      ]
    },
    "345": {
      "op": "txna ApplicationArgs 4",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%37#0"
      ]
    },
    "348": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0"
      ]
    },
    "351": {
      "op": "txna ApplicationArgs 5",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "354": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0"
      ]
    },
    "357": {
      "op": "txna ApplicationArgs 6",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%41#0"
      ]
    },
    "360": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0"
      ]
    },
    "361": {
      "op": "txna ApplicationArgs 7",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%43#0"
      ]
    },
    "364": {
      "op": "extract 2 0",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%44#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%44#0"
      ]
    },
    "367": {
      "op": "txna ApplicationArgs 8",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%44#0",
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%44#0",
        "tmp%45#0"
      ]
    },
    "370": {
      "op": "btoi",
      "defined_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%44#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%32#0",
        "tmp%34#0",
        "tmp%36#0",
        "tmp%38#0",
        "tmp%40#0",
        "tmp%42#0",
        "tmp%44#0",
        "tmp%46#0"
      ]
    },
    "371": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.setup_poll",
      "op": "callsub setup_poll",
      "stack_out": []
    },
    "374": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "375": {
      "retsub": true,
      "op": "retsub"
    },
    "376": {
      "block": "__puya_arc4_router___submit_vote_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "378": {
      "op": "!",
      "defined_out": [
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%48#0"
      ]
    },
    "379": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "380": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "382": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "383": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "386": {
      "op": "btoi",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "387": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "389": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "tmp%53#0",
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "tmp%54#0"
      ]
    },
    "392": {
      "op": "btoi",
      "defined_out": [
        "tmp%53#0",
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%53#0",
        "tmp%55#0"
      ]
    },
    "393": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.submit_vote",
      "op": "callsub submit_vote",
      "stack_out": []
    },
    "396": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "397": {
      "retsub": true,
      "op": "retsub"
    },
    "398": {
      "block": "__puya_arc4_router___terminate_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "400": {
      "op": "pushint 5 // DeleteApplication",
      "defined_out": [
        "DeleteApplication",
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0",
        "DeleteApplication"
      ]
    },
    "402": {
      "op": "==",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "403": {
      "error": "OnCompletion is not DeleteApplication",
      "op": "assert // OnCompletion is not DeleteApplication",
      "stack_out": []
    },
    "404": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "406": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "407": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.terminate",
      "op": "callsub terminate"
    },
    "410": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "411": {
      "retsub": true,
      "op": "retsub"
    },
    "412": {
      "block": "__puya_arc4_router___after_if_else@12",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "413": {
      "retsub": true,
      "op": "retsub"
    },
    "414": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.generate",
      "params": {},
      "block": "generate",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "417": {
      "op": "txn Sender"
    },
    "419": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "421": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "422": {
      "error": "Transaction sender must match creator address.",
      "op": "assert // Transaction sender must match creator address.",
      "stack_out": []
    },
    "423": {
      "op": "bytec_1 // \"total_accounts_opted_in\"",
      "defined_out": [
        "\"total_accounts_opted_in\""
      ],
      "stack_out": [
        "\"total_accounts_opted_in\""
      ]
    },
    "424": {
      "op": "intc_0 // 0",
      "defined_out": [
        "\"total_accounts_opted_in\"",
        "0"
      ],
      "stack_out": [
        "\"total_accounts_opted_in\"",
        "0"
      ]
    },
    "425": {
      "op": "app_global_put",
      "stack_out": []
    },
    "426": {
      "op": "bytec_2 // \"poll_finalized\"",
      "defined_out": [
        "\"poll_finalized\""
      ],
      "stack_out": [
        "\"poll_finalized\""
      ]
    },
    "427": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"poll_finalized\"",
        "0"
      ]
    },
    "428": {
      "op": "app_global_put",
      "stack_out": []
    },
    "429": {
      "op": "bytec_3 // \"choice1_total\"",
      "defined_out": [
        "\"choice1_total\""
      ],
      "stack_out": [
        "\"choice1_total\""
      ]
    },
    "430": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"choice1_total\"",
        "0"
      ]
    },
    "431": {
      "op": "app_global_put",
      "stack_out": []
    },
    "432": {
      "op": "bytec 4 // \"choice2_total\"",
      "defined_out": [
        "\"choice2_total\""
      ],
      "stack_out": [
        "\"choice2_total\""
      ]
    },
    "434": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"choice2_total\"",
        "0"
      ]
    },
    "435": {
      "op": "app_global_put",
      "stack_out": []
    },
    "436": {
      "op": "bytec 5 // \"choice3_total\"",
      "defined_out": [
        "\"choice3_total\""
      ],
      "stack_out": [
        "\"choice3_total\""
      ]
    },
    "438": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"choice3_total\"",
        "0"
      ]
    },
    "439": {
      "op": "app_global_put",
      "stack_out": []
    },
    "440": {
      "op": "bytec 6 // \"total_votes\"",
      "defined_out": [
        "\"total_votes\""
      ],
      "stack_out": [
        "\"total_votes\""
      ]
    },
    "442": {
      "op": "intc_0 // 0",
      "stack_out": [
        "\"total_votes\"",
        "0"
      ]
    },
    "443": {
      "op": "app_global_put",
      "stack_out": []
    },
    "444": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "446": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "447": {
      "op": "pushbytes 0xc63761cf // method \"View(uint64)\"",
      "defined_out": [
        "Method(View(uint64))",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "Method(View(uint64))"
      ]
    },
    "453": {
      "op": "swap",
      "stack_out": [
        "Method(View(uint64))",
        "val_as_bytes%0#0"
      ]
    },
    "454": {
      "op": "concat",
      "defined_out": [
        "event%0#0"
      ],
      "stack_out": [
        "event%0#0"
      ]
    },
    "455": {
      "op": "log",
      "stack_out": []
    },
    "456": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "458": {
      "op": "itob",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "459": {
      "op": "pushbytes \"Generation method successful for App ID: \"",
      "defined_out": [
        "\"Generation method successful for App ID: \"",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "\"Generation method successful for App ID: \""
      ]
    },
    "502": {
      "op": "swap",
      "stack_out": [
        "\"Generation method successful for App ID: \"",
        "tmp%5#0"
      ]
    },
    "503": {
      "op": "concat",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "504": {
      "op": "log",
      "stack_out": []
    },
    "505": {
      "retsub": true,
      "op": "retsub"
    },
    "506": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.global_storage_mbr",
      "params": {
        "mbr_pay#0": "uint64"
      },
      "block": "global_storage_mbr",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "509": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "511": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "513": {
      "op": "pushints 4 8 // 4, 8",
      "defined_out": [
        "4",
        "8",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "4",
        "8"
      ]
    },
    "517": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.calc_mbr",
      "op": "callsub calc_mbr",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "520": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "521": {
      "error": "MBR payment must meet the minimum requirement amount.",
      "op": "assert // MBR payment must meet the minimum requirement amount.",
      "stack_out": []
    },
    "522": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "524": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "526": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "528": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "529": {
      "error": "MBR payment sender must match the App creator account.",
      "op": "assert // MBR payment sender must match the App creator account.",
      "stack_out": []
    },
    "530": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "532": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "534": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%7#0"
      ]
    },
    "536": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "537": {
      "error": "MBR payment reciever must be the App address.",
      "op": "assert // MBR payment reciever must be the App address.",
      "stack_out": []
    },
    "538": {
      "op": "pushbytes \"Global State successfully funded by account address: \""
    },
    "593": {
      "op": "txn Sender",
      "defined_out": [
        "\"Global State successfully funded by account address: \"",
        "tmp%10#0"
      ],
      "stack_out": [
        "\"Global State successfully funded by account address: \"",
        "tmp%10#0"
      ]
    },
    "595": {
      "op": "concat",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "596": {
      "op": "log",
      "stack_out": []
    },
    "597": {
      "retsub": true,
      "op": "retsub"
    },
    "598": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.calc_mbr",
      "params": {
        "num_bytes#0": "uint64",
        "num_uint#0": "uint64"
      },
      "block": "calc_mbr",
      "stack_in": [],
      "op": "proto 2 1"
    },
    "601": {
      "op": "pushint 50000 // 50000",
      "defined_out": [
        "50000"
      ],
      "stack_out": [
        "50000"
      ]
    },
    "605": {
      "op": "frame_dig -2",
      "defined_out": [
        "50000",
        "num_bytes#0 (copy)"
      ],
      "stack_out": [
        "50000",
        "num_bytes#0 (copy)"
      ]
    },
    "607": {
      "op": "*",
      "defined_out": [
        "total_byte_fee#0"
      ],
      "stack_out": [
        "total_byte_fee#0"
      ]
    },
    "608": {
      "op": "pushint 28500 // 28500",
      "defined_out": [
        "28500",
        "total_byte_fee#0"
      ],
      "stack_out": [
        "total_byte_fee#0",
        "28500"
      ]
    },
    "612": {
      "op": "frame_dig -1",
      "defined_out": [
        "28500",
        "num_uint#0 (copy)",
        "total_byte_fee#0"
      ],
      "stack_out": [
        "total_byte_fee#0",
        "28500",
        "num_uint#0 (copy)"
      ]
    },
    "614": {
      "op": "*",
      "defined_out": [
        "total_byte_fee#0",
        "total_uint_fee#0"
      ],
      "stack_out": [
        "total_byte_fee#0",
        "total_uint_fee#0"
      ]
    },
    "615": {
      "op": "global MinBalance",
      "defined_out": [
        "tmp%0#0",
        "total_byte_fee#0",
        "total_uint_fee#0"
      ],
      "stack_out": [
        "total_byte_fee#0",
        "total_uint_fee#0",
        "tmp%0#0"
      ]
    },
    "617": {
      "op": "pushint 100000 // 100000",
      "defined_out": [
        "100000",
        "tmp%0#0",
        "total_byte_fee#0",
        "total_uint_fee#0"
      ],
      "stack_out": [
        "total_byte_fee#0",
        "total_uint_fee#0",
        "tmp%0#0",
        "100000"
      ]
    },
    "621": {
      "op": "+",
      "defined_out": [
        "tmp%1#0",
        "total_byte_fee#0",
        "total_uint_fee#0"
      ],
      "stack_out": [
        "total_byte_fee#0",
        "total_uint_fee#0",
        "tmp%1#0"
      ]
    },
    "622": {
      "op": "uncover 2",
      "stack_out": [
        "total_uint_fee#0",
        "tmp%1#0",
        "total_byte_fee#0"
      ]
    },
    "624": {
      "op": "+",
      "defined_out": [
        "tmp%2#0",
        "total_uint_fee#0"
      ],
      "stack_out": [
        "total_uint_fee#0",
        "tmp%2#0"
      ]
    },
    "625": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "626": {
      "retsub": true,
      "op": "retsub"
    },
    "627": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.local_storage_mbr",
      "params": {
        "account#0": "bytes",
        "mbr_pay#0": "uint64"
      },
      "block": "local_storage_mbr",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "630": {
      "op": "frame_dig -1",
      "defined_out": [
        "mbr_pay#0 (copy)"
      ],
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "632": {
      "op": "gtxns Amount",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "634": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "635": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "2"
      ]
    },
    "636": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.calc_mbr",
      "op": "callsub calc_mbr",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "639": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "640": {
      "error": "MBR payment must meet the minimum requirement amount.",
      "op": "assert // MBR payment must meet the minimum requirement amount.",
      "stack_out": []
    },
    "641": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "643": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "645": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "account#0 (copy)"
      ]
    },
    "647": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "648": {
      "error": "MBR payment sender must match the account opting in.",
      "op": "assert // MBR payment sender must match the account opting in.",
      "stack_out": []
    },
    "649": {
      "op": "frame_dig -1",
      "stack_out": [
        "mbr_pay#0 (copy)"
      ]
    },
    "651": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "653": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "655": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "656": {
      "error": "MBR payment reciever must be the App address.",
      "op": "assert // MBR payment reciever must be the App address.",
      "stack_out": []
    },
    "657": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "659": {
      "op": "bytec 7 // \"vote_status\"",
      "defined_out": [
        "\"vote_status\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"vote_status\""
      ]
    },
    "661": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "\"vote_status\"",
        "0"
      ]
    },
    "662": {
      "op": "app_local_put",
      "stack_out": []
    },
    "663": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "665": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"vote_choice\""
      ]
    },
    "666": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "\"vote_choice\"",
        "0"
      ]
    },
    "667": {
      "op": "app_local_put",
      "stack_out": []
    },
    "668": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "669": {
      "op": "bytec_1 // \"total_accounts_opted_in\"",
      "defined_out": [
        "\"total_accounts_opted_in\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_accounts_opted_in\""
      ]
    },
    "670": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "671": {
      "error": "check self.total_accounts_opted_in exists",
      "op": "assert // check self.total_accounts_opted_in exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "672": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "1"
      ]
    },
    "673": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "674": {
      "op": "bytec_1 // \"total_accounts_opted_in\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"total_accounts_opted_in\""
      ]
    },
    "675": {
      "op": "swap",
      "stack_out": [
        "\"total_accounts_opted_in\"",
        "new_state_value%0#0"
      ]
    },
    "676": {
      "op": "app_global_put",
      "stack_out": []
    },
    "677": {
      "op": "pushbytes \"Local State successfully funded by account address: \""
    },
    "731": {
      "op": "txn Sender",
      "defined_out": [
        "\"Local State successfully funded by account address: \"",
        "tmp%9#0"
      ],
      "stack_out": [
        "\"Local State successfully funded by account address: \"",
        "tmp%9#0"
      ]
    },
    "733": {
      "op": "concat",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "734": {
      "op": "log",
      "stack_out": []
    },
    "735": {
      "retsub": true,
      "op": "retsub"
    },
    "736": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.opt_out",
      "params": {
        "account#0": "bytes"
      },
      "block": "opt_out",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "739": {
      "op": "frame_dig -1"
    },
    "741": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "account#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "account#0 (copy)",
        "tmp%0#0"
      ]
    },
    "743": {
      "op": "app_opted_in",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "744": {
      "error": "Account must first be opted-in to App client in order to close out.",
      "op": "assert // Account must first be opted-in to App client in order to close out.",
      "stack_out": []
    },
    "745": {
      "op": "frame_dig -1"
    },
    "747": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "account#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "account#0 (copy)",
        "tmp%2#0"
      ]
    },
    "749": {
      "op": "app_opted_in",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "750": {
      "op": "bz opt_out_or_contd@2",
      "stack_out": []
    },
    "753": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "755": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "756": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"vote_choice\""
      ]
    },
    "757": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "758": {
      "error": "check self.local_vote_choice exists for account",
      "op": "assert // check self.local_vote_choice exists for account",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "759": {
      "op": "bz opt_out_bool_true@5",
      "stack_out": []
    },
    "762": {
      "block": "opt_out_or_contd@2",
      "stack_in": [],
      "op": "frame_dig -1"
    },
    "764": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "account#0 (copy)",
        "tmp%5#0"
      ],
      "stack_out": [
        "account#0 (copy)",
        "tmp%5#0"
      ]
    },
    "766": {
      "op": "app_opted_in",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "767": {
      "op": "bz opt_out_bool_false@6",
      "stack_out": []
    },
    "770": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "772": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "773": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"vote_choice\""
      ]
    },
    "774": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "775": {
      "error": "check self.local_vote_choice exists for account",
      "op": "assert // check self.local_vote_choice exists for account",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "776": {
      "op": "bz opt_out_bool_false@6",
      "stack_out": []
    },
    "779": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "781": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%8#0",
        "0"
      ]
    },
    "782": {
      "op": "bytec 8 // \"poll_end_date_unix\"",
      "defined_out": [
        "\"poll_end_date_unix\"",
        "0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "0",
        "\"poll_end_date_unix\""
      ]
    },
    "784": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "785": {
      "error": "check self.poll_end_date_unix exists",
      "op": "assert // check self.poll_end_date_unix exists",
      "stack_out": [
        "tmp%8#0",
        "maybe_value%2#0"
      ]
    },
    "786": {
      "op": ">",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "787": {
      "op": "bz opt_out_bool_false@6",
      "stack_out": []
    },
    "790": {
      "block": "opt_out_bool_true@5",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "791": {
      "op": "b opt_out_bool_merge@7"
    },
    "794": {
      "block": "opt_out_bool_false@6",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "or_result%0#0"
      ]
    },
    "795": {
      "block": "opt_out_bool_merge@7",
      "stack_in": [
        "or_result%0#0"
      ],
      "error": "Requirements for opting-out of App client are insufficient.",
      "op": "assert // Requirements for opting-out of App client are insufficient.",
      "defined_out": [],
      "stack_out": []
    },
    "796": {
      "op": "frame_dig -1",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "798": {
      "op": "bytec 7 // \"vote_status\"",
      "defined_out": [
        "\"vote_status\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"vote_status\""
      ]
    },
    "800": {
      "op": "app_local_del",
      "stack_out": []
    },
    "801": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "803": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "\"vote_choice\""
      ]
    },
    "804": {
      "op": "app_local_del",
      "stack_out": []
    },
    "805": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "806": {
      "op": "bytec_1 // \"total_accounts_opted_in\"",
      "defined_out": [
        "\"total_accounts_opted_in\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"total_accounts_opted_in\""
      ]
    },
    "807": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "808": {
      "error": "check self.total_accounts_opted_in exists",
      "op": "assert // check self.total_accounts_opted_in exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "809": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "1"
      ]
    },
    "810": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "new_state_value%0#0"
      ]
    },
    "811": {
      "op": "bytec_1 // \"total_accounts_opted_in\"",
      "stack_out": [
        "new_state_value%0#0",
        "\"total_accounts_opted_in\""
      ]
    },
    "812": {
      "op": "swap",
      "stack_out": [
        "\"total_accounts_opted_in\"",
        "new_state_value%0#0"
      ]
    },
    "813": {
      "op": "app_global_put",
      "stack_out": []
    },
    "814": {
      "op": "itxn_begin"
    },
    "815": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "816": {
      "op": "intc_2 // 2",
      "defined_out": [
        "0",
        "2"
      ],
      "stack_out": [
        "0",
        "2"
      ]
    },
    "817": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.calc_mbr",
      "op": "callsub calc_mbr",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "820": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "1000"
      ]
    },
    "821": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "822": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "824": {
      "op": "pushbytes \"MBR refund for closing out.\"",
      "defined_out": [
        "\"MBR refund for closing out.\"",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "\"MBR refund for closing out.\""
      ]
    },
    "853": {
      "op": "itxn_field Note",
      "stack_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "855": {
      "op": "itxn_field Sender",
      "stack_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "857": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "859": {
      "op": "frame_dig -1",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "861": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "863": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "864": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "866": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "867": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "869": {
      "op": "itxn_submit"
    },
    "870": {
      "op": "pushbytes \"Close-out method successful for account address: \"",
      "defined_out": [
        "\"Close-out method successful for account address: \""
      ],
      "stack_out": [
        "\"Close-out method successful for account address: \""
      ]
    },
    "921": {
      "op": "frame_dig -1",
      "stack_out": [
        "\"Close-out method successful for account address: \"",
        "account#0 (copy)"
      ]
    },
    "923": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "924": {
      "op": "log",
      "stack_out": []
    },
    "925": {
      "retsub": true,
      "op": "retsub"
    },
    "926": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.setup_poll",
      "params": {
        "title#0": "bytes",
        "choice1#0": "bytes",
        "choice2#0": "bytes",
        "choice3#0": "bytes",
        "start_date_str#0": "bytes",
        "start_date_unix#0": "uint64",
        "end_date_str#0": "bytes",
        "end_date_unix#0": "uint64"
      },
      "block": "setup_poll",
      "stack_in": [],
      "op": "proto 8 0"
    },
    "929": {
      "op": "txn Sender"
    },
    "931": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "933": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "934": {
      "error": "Only App creator can set vote dates.",
      "op": "assert // Only App creator can set vote dates.",
      "stack_out": []
    },
    "935": {
      "op": "frame_dig -8",
      "defined_out": [
        "title#0 (copy)"
      ],
      "stack_out": [
        "title#0 (copy)"
      ]
    },
    "937": {
      "op": "len",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "938": {
      "op": "pushint 118 // 118",
      "defined_out": [
        "118",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "118"
      ]
    },
    "940": {
      "op": "<=",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "941": {
      "error": "Poll title size can not exceed 118 bytes of data per key-value.",
      "op": "assert // Poll title size can not exceed 118 bytes of data per key-value.",
      "stack_out": []
    },
    "942": {
      "op": "frame_dig -7",
      "defined_out": [
        "choice1#0 (copy)"
      ],
      "stack_out": [
        "choice1#0 (copy)"
      ]
    },
    "944": {
      "op": "len",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "945": {
      "op": "pushint 116 // 116",
      "defined_out": [
        "116",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "116"
      ]
    },
    "947": {
      "op": "<=",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "948": {
      "op": "bz setup_poll_bool_false@4",
      "stack_out": []
    },
    "951": {
      "op": "frame_dig -6",
      "defined_out": [
        "choice2#0 (copy)"
      ],
      "stack_out": [
        "choice2#0 (copy)"
      ]
    },
    "953": {
      "op": "len",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "954": {
      "op": "pushint 116 // 116",
      "stack_out": [
        "tmp%7#0",
        "116"
      ]
    },
    "956": {
      "op": "<=",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "957": {
      "op": "bz setup_poll_bool_false@4",
      "stack_out": []
    },
    "960": {
      "op": "frame_dig -5",
      "defined_out": [
        "choice3#0 (copy)"
      ],
      "stack_out": [
        "choice3#0 (copy)"
      ]
    },
    "962": {
      "op": "len",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "963": {
      "op": "pushint 116 // 116",
      "stack_out": [
        "tmp%9#0",
        "116"
      ]
    },
    "965": {
      "op": "<=",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "966": {
      "op": "bz setup_poll_bool_false@4",
      "stack_out": []
    },
    "969": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "970": {
      "op": "b setup_poll_bool_merge@5"
    },
    "973": {
      "block": "setup_poll_bool_false@4",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "974": {
      "block": "setup_poll_bool_merge@5",
      "stack_in": [
        "and_result%0#0"
      ],
      "error": "Poll choice size cannot exceed 116 bytes of data per key-value.",
      "op": "assert // Poll choice size cannot exceed 116 bytes of data per key-value.",
      "defined_out": [],
      "stack_out": []
    },
    "975": {
      "op": "frame_dig -3",
      "defined_out": [
        "start_date_unix#0 (copy)"
      ],
      "stack_out": [
        "start_date_unix#0 (copy)"
      ]
    },
    "977": {
      "op": "frame_dig -1",
      "defined_out": [
        "end_date_unix#0 (copy)",
        "start_date_unix#0 (copy)"
      ],
      "stack_out": [
        "start_date_unix#0 (copy)",
        "end_date_unix#0 (copy)"
      ]
    },
    "979": {
      "op": "<",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "980": {
      "error": "Start date must be earlier than end date.",
      "op": "assert // Start date must be earlier than end date.",
      "stack_out": []
    },
    "981": {
      "op": "frame_dig -3",
      "stack_out": [
        "start_date_unix#0 (copy)"
      ]
    },
    "983": {
      "op": "pushint 259200 // 259200",
      "defined_out": [
        "259200",
        "start_date_unix#0 (copy)"
      ],
      "stack_out": [
        "start_date_unix#0 (copy)",
        "259200"
      ]
    },
    "987": {
      "op": "+",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "988": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%12#0",
        "end_date_unix#0 (copy)"
      ]
    },
    "990": {
      "op": "<=",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "991": {
      "error": "End date must be at least 3 days later than the start date.",
      "op": "assert // End date must be at least 3 days later than the start date.",
      "stack_out": []
    },
    "992": {
      "op": "frame_dig -1",
      "stack_out": [
        "end_date_unix#0 (copy)"
      ]
    },
    "994": {
      "op": "frame_dig -3",
      "stack_out": [
        "end_date_unix#0 (copy)",
        "start_date_unix#0 (copy)"
      ]
    },
    "996": {
      "op": "-",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "997": {
      "op": "pushint 1209600 // 1209600",
      "defined_out": [
        "1209600",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0",
        "1209600"
      ]
    },
    "1001": {
      "op": "<=",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "1002": {
      "error": "Voting period can not exceed 14 days.",
      "op": "assert // Voting period can not exceed 14 days.",
      "stack_out": []
    },
    "1003": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "1004": {
      "op": "bytec_2 // \"poll_finalized\"",
      "defined_out": [
        "\"poll_finalized\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"poll_finalized\""
      ]
    },
    "1005": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1006": {
      "error": "check self.poll_finalized exists",
      "op": "assert // check self.poll_finalized exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "1007": {
      "op": "!",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "1008": {
      "error": "Poll can only be setup once.",
      "op": "assert // Poll can only be setup once.",
      "stack_out": []
    },
    "1009": {
      "op": "pushbytes \"poll_title\"",
      "defined_out": [
        "\"poll_title\""
      ],
      "stack_out": [
        "\"poll_title\""
      ]
    },
    "1021": {
      "op": "frame_dig -8",
      "defined_out": [
        "\"poll_title\"",
        "title#0 (copy)"
      ],
      "stack_out": [
        "\"poll_title\"",
        "title#0 (copy)"
      ]
    },
    "1023": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1024": {
      "op": "pushbytes \"poll_choice1\"",
      "defined_out": [
        "\"poll_choice1\""
      ],
      "stack_out": [
        "\"poll_choice1\""
      ]
    },
    "1038": {
      "op": "frame_dig -7",
      "defined_out": [
        "\"poll_choice1\"",
        "choice1#0 (copy)"
      ],
      "stack_out": [
        "\"poll_choice1\"",
        "choice1#0 (copy)"
      ]
    },
    "1040": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1041": {
      "op": "pushbytes \"poll_choice2\"",
      "defined_out": [
        "\"poll_choice2\""
      ],
      "stack_out": [
        "\"poll_choice2\""
      ]
    },
    "1055": {
      "op": "frame_dig -6",
      "defined_out": [
        "\"poll_choice2\"",
        "choice2#0 (copy)"
      ],
      "stack_out": [
        "\"poll_choice2\"",
        "choice2#0 (copy)"
      ]
    },
    "1057": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1058": {
      "op": "pushbytes \"poll_choice3\"",
      "defined_out": [
        "\"poll_choice3\""
      ],
      "stack_out": [
        "\"poll_choice3\""
      ]
    },
    "1072": {
      "op": "frame_dig -5",
      "defined_out": [
        "\"poll_choice3\"",
        "choice3#0 (copy)"
      ],
      "stack_out": [
        "\"poll_choice3\"",
        "choice3#0 (copy)"
      ]
    },
    "1074": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1075": {
      "op": "bytec 9 // \"poll_start_date_unix\"",
      "defined_out": [
        "\"poll_start_date_unix\""
      ],
      "stack_out": [
        "\"poll_start_date_unix\""
      ]
    },
    "1077": {
      "op": "frame_dig -3",
      "stack_out": [
        "\"poll_start_date_unix\"",
        "start_date_unix#0 (copy)"
      ]
    },
    "1079": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1080": {
      "op": "bytec 8 // \"poll_end_date_unix\"",
      "defined_out": [
        "\"poll_end_date_unix\""
      ],
      "stack_out": [
        "\"poll_end_date_unix\""
      ]
    },
    "1082": {
      "op": "frame_dig -1",
      "stack_out": [
        "\"poll_end_date_unix\"",
        "end_date_unix#0 (copy)"
      ]
    },
    "1084": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1085": {
      "op": "bytec_2 // \"poll_finalized\"",
      "stack_out": [
        "\"poll_finalized\""
      ]
    },
    "1086": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"poll_finalized\"",
        "1"
      ],
      "stack_out": [
        "\"poll_finalized\"",
        "1"
      ]
    },
    "1087": {
      "op": "app_global_put",
      "stack_out": []
    },
    "1088": {
      "op": "pushbytes \"Poll start date: \"",
      "defined_out": [
        "\"Poll start date: \""
      ],
      "stack_out": [
        "\"Poll start date: \""
      ]
    },
    "1107": {
      "op": "frame_dig -4",
      "defined_out": [
        "\"Poll start date: \"",
        "start_date_str#0 (copy)"
      ],
      "stack_out": [
        "\"Poll start date: \"",
        "start_date_str#0 (copy)"
      ]
    },
    "1109": {
      "op": "concat",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "1110": {
      "op": "log",
      "stack_out": []
    },
    "1111": {
      "op": "pushbytes \"Poll end date: \"",
      "defined_out": [
        "\"Poll end date: \""
      ],
      "stack_out": [
        "\"Poll end date: \""
      ]
    },
    "1128": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"Poll end date: \"",
        "end_date_str#0 (copy)"
      ],
      "stack_out": [
        "\"Poll end date: \"",
        "end_date_str#0 (copy)"
      ]
    },
    "1130": {
      "op": "concat",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "1131": {
      "op": "log",
      "stack_out": []
    },
    "1132": {
      "retsub": true,
      "op": "retsub"
    },
    "1133": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.submit_vote",
      "params": {
        "account#0": "bytes",
        "choice#0": "uint64"
      },
      "block": "submit_vote",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "1136": {
      "op": "frame_dig -2"
    },
    "1138": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "account#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "account#0 (copy)",
        "tmp%0#0"
      ]
    },
    "1140": {
      "op": "app_opted_in",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1141": {
      "error": "Account must be opted-in before voting.",
      "op": "assert // Account must be opted-in before voting.",
      "stack_out": []
    },
    "1142": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1144": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0"
      ]
    },
    "1145": {
      "op": "bytec 9 // \"poll_start_date_unix\"",
      "defined_out": [
        "\"poll_start_date_unix\"",
        "0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "0",
        "\"poll_start_date_unix\""
      ]
    },
    "1147": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1148": {
      "error": "check self.poll_start_date_unix exists",
      "op": "assert // check self.poll_start_date_unix exists",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "1149": {
      "op": ">",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1150": {
      "error": "Voting period has not started yet.",
      "op": "assert // Voting period has not started yet.",
      "stack_out": []
    },
    "1151": {
      "op": "global LatestTimestamp",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "1153": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%4#0",
        "0"
      ]
    },
    "1154": {
      "op": "bytec 8 // \"poll_end_date_unix\"",
      "defined_out": [
        "\"poll_end_date_unix\"",
        "0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "0",
        "\"poll_end_date_unix\""
      ]
    },
    "1156": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1157": {
      "error": "check self.poll_end_date_unix exists",
      "op": "assert // check self.poll_end_date_unix exists",
      "stack_out": [
        "tmp%4#0",
        "maybe_value%1#0"
      ]
    },
    "1158": {
      "op": "<",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1159": {
      "error": "Voting period has ended.",
      "op": "assert // Voting period has ended.",
      "stack_out": []
    },
    "1160": {
      "op": "frame_dig -2",
      "stack_out": [
        "account#0 (copy)"
      ]
    },
    "1162": {
      "op": "intc_0 // 0",
      "stack_out": [
        "account#0 (copy)",
        "0"
      ]
    },
    "1163": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "0",
        "account#0 (copy)"
      ],
      "stack_out": [
        "account#0 (copy)",
        "0",
        "\"vote_choice\""
      ]
    },
    "1164": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1165": {
      "error": "check self.local_vote_choice exists for account",
      "op": "assert // check self.local_vote_choice exists for account",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "1166": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1167": {
      "error": "This account already submitted a vote.",
      "op": "assert // This account already submitted a vote.",
      "stack_out": []
    },
    "1168": {
      "op": "frame_dig -1",
      "defined_out": [
        "choice#0 (copy)"
      ],
      "stack_out": [
        "choice#0 (copy)"
      ]
    },
    "1170": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "choice#0 (copy)"
      ],
      "stack_out": [
        "choice#0 (copy)",
        "1"
      ]
    },
    "1171": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1172": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "1173": {
      "op": "bnz submit_vote_bool_true@3",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1176": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%7#0",
        "choice#0 (copy)"
      ]
    },
    "1178": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "choice#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "choice#0 (copy)",
        "2"
      ]
    },
    "1179": {
      "op": "==",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "1180": {
      "op": "bnz submit_vote_bool_true@3",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1183": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%7#0",
        "choice#0 (copy)"
      ]
    },
    "1185": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "choice#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "choice#0 (copy)",
        "3"
      ]
    },
    "1187": {
      "op": "==",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1188": {
      "op": "bz submit_vote_bool_false@4",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1191": {
      "block": "submit_vote_bool_true@3",
      "stack_in": [
        "tmp%7#0"
      ],
      "op": "intc_1 // 1",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "or_result%0#0"
      ]
    },
    "1192": {
      "op": "b submit_vote_bool_merge@5"
    },
    "1195": {
      "block": "submit_vote_bool_false@4",
      "stack_in": [
        "tmp%7#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "or_result%0#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "or_result%0#0"
      ]
    },
    "1196": {
      "block": "submit_vote_bool_merge@5",
      "stack_in": [
        "tmp%7#0",
        "or_result%0#0"
      ],
      "error": "Invalid choice. Can only choose between choices 1, 2, 3.",
      "op": "assert // Invalid choice. Can only choose between choices 1, 2, 3.",
      "defined_out": [],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1197": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)"
      ]
    },
    "1199": {
      "op": "bytec 7 // \"vote_status\"",
      "defined_out": [
        "\"vote_status\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_status\""
      ]
    },
    "1201": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"vote_status\"",
        "1",
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_status\"",
        "1"
      ]
    },
    "1202": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1203": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "1204": {
      "op": "bytec 6 // \"total_votes\"",
      "defined_out": [
        "\"total_votes\"",
        "0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "\"total_votes\""
      ]
    },
    "1206": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1207": {
      "error": "check self.total_votes exists",
      "op": "assert // check self.total_votes exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%3#0"
      ]
    },
    "1208": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%3#0",
        "1"
      ]
    },
    "1209": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%0#0"
      ]
    },
    "1210": {
      "op": "bytec 6 // \"total_votes\"",
      "stack_out": [
        "tmp%7#0",
        "new_state_value%0#0",
        "\"total_votes\""
      ]
    },
    "1212": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "\"total_votes\"",
        "new_state_value%0#0"
      ]
    },
    "1213": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1214": {
      "op": "frame_dig 0",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0"
      ]
    },
    "1216": {
      "op": "bz submit_vote_else_body@7",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1219": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "1220": {
      "op": "bytec_3 // \"choice1_total\"",
      "defined_out": [
        "\"choice1_total\"",
        "0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "\"choice1_total\""
      ]
    },
    "1221": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "1222": {
      "error": "check self.choice1_total exists",
      "op": "assert // check self.choice1_total exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%4#0"
      ]
    },
    "1223": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%4#0",
        "1"
      ]
    },
    "1224": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%1#0"
      ]
    },
    "1225": {
      "op": "bytec_3 // \"choice1_total\"",
      "stack_out": [
        "tmp%7#0",
        "new_state_value%1#0",
        "\"choice1_total\""
      ]
    },
    "1226": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "\"choice1_total\"",
        "new_state_value%1#0"
      ]
    },
    "1227": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1228": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)"
      ]
    },
    "1230": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "account#0 (copy)",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_choice\""
      ]
    },
    "1231": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_choice\"",
        "1"
      ]
    },
    "1232": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1233": {
      "op": "b submit_vote_after_if_else@11"
    },
    "1236": {
      "block": "submit_vote_else_body@7",
      "stack_in": [
        "tmp%7#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "choice#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "choice#0 (copy)"
      ]
    },
    "1238": {
      "op": "intc_2 // 2",
      "defined_out": [
        "2",
        "choice#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "choice#0 (copy)",
        "2"
      ]
    },
    "1239": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%11#0"
      ]
    },
    "1240": {
      "op": "bz submit_vote_else_body@9",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1243": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "1244": {
      "op": "bytec 4 // \"choice2_total\"",
      "defined_out": [
        "\"choice2_total\"",
        "0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "\"choice2_total\""
      ]
    },
    "1246": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "1247": {
      "error": "check self.choice2_total exists",
      "op": "assert // check self.choice2_total exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%5#0"
      ]
    },
    "1248": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%5#0",
        "1"
      ]
    },
    "1249": {
      "op": "+",
      "defined_out": [
        "new_state_value%2#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%2#0"
      ]
    },
    "1250": {
      "op": "bytec 4 // \"choice2_total\"",
      "stack_out": [
        "tmp%7#0",
        "new_state_value%2#0",
        "\"choice2_total\""
      ]
    },
    "1252": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "\"choice2_total\"",
        "new_state_value%2#0"
      ]
    },
    "1253": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1254": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)"
      ]
    },
    "1256": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_choice\""
      ]
    },
    "1257": {
      "op": "intc_2 // 2",
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_choice\"",
        "2"
      ]
    },
    "1258": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1259": {
      "op": "b submit_vote_after_if_else@11"
    },
    "1262": {
      "block": "submit_vote_else_body@9",
      "stack_in": [
        "tmp%7#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0"
      ]
    },
    "1263": {
      "op": "bytec 5 // \"choice3_total\"",
      "defined_out": [
        "\"choice3_total\"",
        "0"
      ],
      "stack_out": [
        "tmp%7#0",
        "0",
        "\"choice3_total\""
      ]
    },
    "1265": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "1266": {
      "error": "check self.choice3_total exists",
      "op": "assert // check self.choice3_total exists",
      "stack_out": [
        "tmp%7#0",
        "maybe_value%6#0"
      ]
    },
    "1267": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%6#0",
        "1"
      ]
    },
    "1268": {
      "op": "+",
      "defined_out": [
        "new_state_value%3#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "new_state_value%3#0"
      ]
    },
    "1269": {
      "op": "bytec 5 // \"choice3_total\"",
      "stack_out": [
        "tmp%7#0",
        "new_state_value%3#0",
        "\"choice3_total\""
      ]
    },
    "1271": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "\"choice3_total\"",
        "new_state_value%3#0"
      ]
    },
    "1272": {
      "op": "app_global_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1273": {
      "op": "frame_dig -2",
      "defined_out": [
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)"
      ]
    },
    "1275": {
      "op": "bytec_0 // \"vote_choice\"",
      "defined_out": [
        "\"vote_choice\"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_choice\""
      ]
    },
    "1276": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "\"vote_choice\"",
        "3",
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "account#0 (copy)",
        "\"vote_choice\"",
        "3"
      ]
    },
    "1278": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1279": {
      "block": "submit_vote_after_if_else@11",
      "stack_in": [
        "tmp%7#0"
      ],
      "op": "pushbytes \"Vote submitted successfully for account address: \"",
      "defined_out": [
        "\"Vote submitted successfully for account address: \""
      ],
      "stack_out": [
        "tmp%7#0",
        "\"Vote submitted successfully for account address: \""
      ]
    },
    "1330": {
      "op": "frame_dig -2",
      "defined_out": [
        "\"Vote submitted successfully for account address: \"",
        "account#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "\"Vote submitted successfully for account address: \"",
        "account#0 (copy)"
      ]
    },
    "1332": {
      "op": "concat",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%13#0"
      ]
    },
    "1333": {
      "op": "log",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1334": {
      "op": "frame_dig -1",
      "defined_out": [
        "choice#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "choice#0 (copy)"
      ]
    },
    "1336": {
      "op": "itob",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%15#0"
      ]
    },
    "1337": {
      "op": "pushbytes \"Vote submitted for choice number: \"",
      "defined_out": [
        "\"Vote submitted for choice number: \"",
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%15#0",
        "\"Vote submitted for choice number: \""
      ]
    },
    "1373": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "\"Vote submitted for choice number: \"",
        "tmp%15#0"
      ]
    },
    "1374": {
      "op": "concat",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%16#0"
      ]
    },
    "1375": {
      "op": "log",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1376": {
      "retsub": true,
      "op": "retsub"
    },
    "1377": {
      "subroutine": "smart_contracts.vote_chain.contract.VoteChain.terminate",
      "params": {},
      "block": "terminate",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1380": {
      "op": "txn Sender"
    },
    "1382": {
      "op": "global CreatorAddress",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "1384": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "1385": {
      "error": "Only App creator can terminate the App.",
      "op": "assert // Only App creator can terminate the App.",
      "stack_out": []
    },
    "1386": {
      "op": "itxn_begin"
    },
    "1387": {
      "op": "global CreatorAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "1389": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "0"
      ]
    },
    "1390": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "0",
        "8",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "0",
        "8"
      ]
    },
    "1392": {
      "callsub": "smart_contracts.vote_chain.contract.VoteChain.calc_mbr",
      "op": "callsub calc_mbr",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%3#0"
      ]
    },
    "1395": {
      "op": "intc_3 // 1000",
      "defined_out": [
        "1000",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%3#0",
        "1000"
      ]
    },
    "1396": {
      "op": "-",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "1397": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1399": {
      "op": "pushbytes \"MBR refund for deleting App.\"",
      "defined_out": [
        "\"MBR refund for deleting App.\"",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0",
        "\"MBR refund for deleting App.\""
      ]
    },
    "1429": {
      "op": "itxn_field Note",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0",
        "inner_txn_params%0%%param_Sender_idx_0#0"
      ]
    },
    "1431": {
      "op": "itxn_field Sender",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "inner_txn_params%0%%param_Amount_idx_0#0"
      ]
    },
    "1433": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "1435": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "1437": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "1438": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "1440": {
      "op": "intc_3 // 1000",
      "stack_out": [
        "1000"
      ]
    },
    "1441": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "1443": {
      "op": "itxn_submit"
    },
    "1444": {
      "op": "global CurrentApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1446": {
      "op": "itob",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "1447": {
      "op": "pushbytes \"Termination method successful for App ID: \"",
      "defined_out": [
        "\"Termination method successful for App ID: \"",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "\"Termination method successful for App ID: \""
      ]
    },
    "1491": {
      "op": "swap",
      "stack_out": [
        "\"Termination method successful for App ID: \"",
        "tmp%6#0"
      ]
    },
    "1492": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "1493": {
      "op": "log",
      "stack_out": []
    },
    "1494": {
      "retsub": true,
      "op": "retsub"
    }
  }
}